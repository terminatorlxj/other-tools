VVM
VAR	
s00: {noncritical, trying, critical}; 
s01: {noncritical, trying, critical}; 
s02: {noncritical, trying, critical}; 
s03: {noncritical, trying, critical}; 
s04: {noncritical, trying, critical}; 
s05: {noncritical, trying, critical}; 
s06: {noncritical, trying, critical}; 
turn: 0..06;
INIT 
turn=0;
PROC
ss: stuttering();
pr00: prc(s00, s01, turn, 00, 01); 
pr01: prc(s01, s02, turn, 01, 02);
pr02: prc(s02, s03, turn, 02, 03);
pr03: prc(s03, s04, turn, 03, 04);
pr04: prc(s04, s05, turn, 04, 05);
pr05: prc(s05, s06, turn, 05, 06);
pr06: prc(s06, s00, turn, 06, 00);
FAIRNESS
!(s00=critical);
SPEC 



AG(!(s00 = critical) | A((s00 = critical) U (!(s00 = critical) & A(!(s00 = critical) U (s01 = critical)))));            

MODULE stuttering()
VAR
INIT
TRANS
TRUE: 1=1;
MODULE	prc(state0,state1,turn,turn0,turn1)
VAR
INIT
	state0=noncritical;
TRANS 	
	state0=noncritical&turn=turn0: state0=trying&turn=turn1;
	state0=noncritical&turn!=turn0: state0=trying;
	state0=noncritical&turn=turn0: state0=noncritical&turn=turn1;
	state0=noncritical&turn!=turn0: state0=noncritical;
	state0=trying&state1=noncritical: state0=critical;
	state0=trying&state1=trying&turn=turn0: state0=critical;
//	state0=critical: 	state0=trying;
	state0=critical: 	state0=critical;
	state0=critical: 	state0=noncritical;
	state0=trying&!(state1=noncritical)&!(state1=trying&turn=turn0)
	: state0=state0;
FAIRNESS
running
